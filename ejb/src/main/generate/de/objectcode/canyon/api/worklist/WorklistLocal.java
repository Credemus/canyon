/*
 * Generated by XDoclet - Do not edit!
 */
package de.objectcode.canyon.api.worklist;

/**
 * Local interface for Worklist.
 * @author junglas
 * @created 5. Dezember 2003
 */
public interface WorklistLocal
   extends javax.ejb.EJBLocalObject
{

   public de.objectcode.canyon.api.worklist.WorkItemData getWorkItem( java.lang.String workItemId ) throws org.wfmc.wapi.WMWorkflowException;

   public int countWorkItems( java.lang.String userName,boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public int countWorkItems( boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItemsForProcessInstance( java.lang.String processInstanceId,int offset,int length,boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( java.lang.String userName,int offset,int length,boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( java.lang.String userName,java.lang.String clientId,int offset,int length,boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( java.lang.String userName,java.lang.String clientId,int offset,int length,boolean onlyOpen,de.objectcode.canyon.spi.filter.IFilter filter,java.lang.String[] sortAttrs,boolean[] sortAscending ) throws org.wfmc.wapi.WMWorkflowException;

   public int countWorkItems( java.lang.String userName,java.lang.String clientId,boolean onlyOpen,de.objectcode.canyon.spi.filter.IFilter filter ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( int offset,int length,boolean onlyOpen ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( java.lang.String processDefinitionId,java.lang.String activityDefinitionId,java.lang.Boolean overdue,java.lang.String performer,java.lang.String[] participants,int[] states,java.lang.String activityName,java.lang.String processName,java.lang.String processInstanceIdPath ) throws org.wfmc.wapi.WMWorkflowException;

   public de.objectcode.canyon.api.worklist.WorkItemData[] listWorkItems( java.lang.String processDefinitionId,java.lang.String activityDefinitionId,java.lang.Boolean overdue,java.lang.String performer,java.lang.String[] participants,int[] states,java.lang.String activityName,java.lang.String processName,java.lang.String processInstanceIdPath,int maxResultSize ) throws org.wfmc.wapi.WMWorkflowException;

   public boolean handleEvent( de.objectcode.canyon.api.worklist.WorklistEvent event ) throws org.wfmc.wapi.WMWorkflowException;

   public void updateWorkItem( de.objectcode.canyon.api.worklist.WorkItemData workItemData ) throws org.wfmc.wapi.WMWorkflowException;

   public void reassignWorkItem( de.objectcode.canyon.api.worklist.WorkItemData workItemData,java.lang.String targeUser ) throws org.wfmc.wapi.WMWorkflowException;

   public int indexOf( de.objectcode.canyon.api.worklist.WorkItemData workItemData,java.lang.String userName,java.lang.String clientId,boolean onlyOpen,de.objectcode.canyon.spi.filter.IFilter filter,java.lang.String[] sortAttrs,boolean[] sortAscending ) throws org.wfmc.wapi.WMWorkflowException;

}
